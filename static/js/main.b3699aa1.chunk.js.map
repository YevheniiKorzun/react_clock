{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","clockMethod","setState","console","log","toLocaleTimeString","this","setInterval","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","setClockNameHandler","Math","floor","random","showClockHandler","hideClockHandler","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,IA2BEC,YAAc,WACZ,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAG1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,uBA/BhC,uDAOE,WACEC,KAAKN,QAAUO,YACbD,KAAKL,YACL,OAVN,gCAcE,SAAmBO,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CI,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAjBhF,kCAqBE,WACMH,KAAKN,SACPW,cAAcL,KAAKN,WAvBzB,oBAkCE,WACE,OACE,qCACE,4BAAIM,KAAKT,MAAMC,KAAKO,uBACpB,4CAAaC,KAAKI,MAAMD,eAtChC,GAA2BG,IAAMC,WCA3BC,G,kNACJjB,MAAe,CACbkB,gBAAgB,EAChBC,UAAW,G,EAGbC,oBAAsB,WACpB,EAAKf,SAAS,CACZc,UAAWE,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAI/BC,iBAAmB,WACjB,EAAKnB,SAAS,CAAEa,gBAAgB,K,EAGlCO,iBAAmB,WACjB,EAAKpB,SAAS,CAAEa,gBAAgB,K,4CAGlC,WACE,OACE,sBAAKQ,UAAU,MAAf,UACE,6CACA,wBAAQC,KAAK,SAASC,QAASnB,KAAKe,iBAApC,wBACA,wBAAQG,KAAK,SAASC,QAASnB,KAAKgB,iBAApC,wBACA,wBAAQE,KAAK,SAASC,QAASnB,KAAKW,oBAApC,6BACA,8CAGCX,KAAKT,MAAMkB,gBAAkB,cAAC,EAAD,CAAON,KAAMH,KAAKT,MAAMmB,mB,GA9B5CJ,IAAMC,YAoCTC,IC3CfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3699aa1.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      this.clockMethod,\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  clockMethod = () => {\n    this.setState({ date: new Date() });\n\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  };\n\n  render() {\n    return (\n      <>\n        <p>{this.state.date.toLocaleTimeString()}</p>\n        <p>{`Name: ${this.props.name}`}</p>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setClockNameHandler = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  };\n\n  showClockHandler = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClockHandler = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button type=\"button\" onClick={this.showClockHandler}>Show Clock</button>\n        <button type=\"button\" onClick={this.hideClockHandler}>Hide Clock</button>\n        <button type=\"button\" onClick={this.setClockNameHandler}>Set random name</button>\n        <p>\n          Current time:\n        </p>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}